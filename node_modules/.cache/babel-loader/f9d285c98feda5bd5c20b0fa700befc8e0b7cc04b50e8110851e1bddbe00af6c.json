{"ast":null,"code":"var _jsxFileName = \"/Users/pranavmody/playdaily-app1/src/TriviaGame/Game.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport triviaData from './trivia-data';\nimport './trivia_game.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [gameState, setGameState] = useState({\n    score: 0,\n    triviaIndex: 0,\n    isGameOver: false,\n    userAnswer: null,\n    correct: null\n  });\n  const {\n    score,\n    triviaIndex,\n    isGameOver,\n    userAnswer,\n    correct\n  } = gameState;\n  const TriviaQuestion = triviaData[triviaIndex] || {};\n  const {\n    correct_answer,\n    incorrect_answers,\n    question\n  } = TriviaQuestion;\n\n  // Handle answer button click\n  const handleAnswerClick = answer => {\n    if (answer === correct_answer) {\n      setGameState({\n        ...gameState,\n        userAnswer: answer,\n        correct: true,\n        score: score + 1\n      });\n    } else {\n      setGameState({\n        ...gameState,\n        userAnswer: answer,\n        correct: false\n      });\n    }\n  };\n\n  // Function to go to the next trivia question\n  // Function to go to the next trivia question\n  const handleNextQuestion = () => {\n    if (triviaIndex < triviaData.length - 1) {\n      setGameState({\n        ...gameState,\n        triviaIndex: triviaIndex + 1,\n        userAnswer: null,\n        correct: null\n      });\n    } else {\n      setGameState({\n        ...gameState,\n        isGameOver: true\n      });\n    }\n  };\n\n  // Render the component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Current score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coins-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./images/coin.webp\",\n          alt: \"Coin\",\n          className: \"coin-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"coin-value\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./images/coin.webp\",\n          alt: \"Coin\",\n          className: \"coin-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"coin-value\",\n          children: questionAnswered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), !isGameOver && TriviaQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"optionbox\",\n        children: [correct_answer, ...incorrect_answers].sort().map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerClick(answer),\n          className: \"options\",\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), userAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: correct ? \"correct-answer\" : \"wrong-answer\",\n        children: correct ? \"Correct Answer!\" : `Wrong Answer! Correct was: ${correct_answer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        className: \"nextButton\",\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No more questions or game is over.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"BquShJi7iHARcAR6YvAGW4vHC+o=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","triviaData","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","gameState","setGameState","score","triviaIndex","isGameOver","userAnswer","correct","TriviaQuestion","correct_answer","incorrect_answers","question","handleAnswerClick","answer","handleNextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","questionAnswered","sort","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/pranavmody/playdaily-app1/src/TriviaGame/Game.js"],"sourcesContent":["import { useState } from 'react';\nimport triviaData from './trivia-data';\nimport './trivia_game.css';\n\nfunction Game() {\n    const [gameState, setGameState] = useState({\n        score: 0,\n        triviaIndex: 0,\n        isGameOver: false,\n        userAnswer: null,\n        correct: null,\n    });\n\n    const { score, triviaIndex, isGameOver, userAnswer, correct } = gameState;\n\n    const TriviaQuestion = triviaData[triviaIndex] || {};\n    const { correct_answer, incorrect_answers, question } = TriviaQuestion;\n\n    // Handle answer button click\n    const handleAnswerClick = (answer) => {\n        if (answer === correct_answer) {\n            setGameState({\n                ...gameState,\n                userAnswer: answer,\n                correct: true,\n                score: score + 1,\n            });\n        } else {\n            setGameState({\n                ...gameState,\n                userAnswer: answer,\n                correct: false,\n            });\n        }\n    };\n\n    // Function to go to the next trivia question\n// Function to go to the next trivia question\nconst handleNextQuestion = () => {\n    if (triviaIndex < triviaData.length - 1) {\n        setGameState({\n            ...gameState,\n            triviaIndex: triviaIndex + 1,\n            userAnswer: null,\n            correct: null,\n        });\n    } else {\n        setGameState({\n            ...gameState,\n            isGameOver: true,\n        });\n    }\n};\n\n\n    // Render the component\n    return (\n        <div className=\"Game\">\n\n      <div className=\"header-container\">\n          <h1>Current score</h1>\n          <div className=\"coins-container\">\n              <img src=\"./images/coin.webp\" alt=\"Coin\" className=\"coin-icon\"/>\n              <span className=\"coin-value\">{score}</span>\n              <img src=\"./images/coin.webp\" alt=\"Coin\" className=\"coin-icon\"/>\n              <span className=\"coin-value\">{questionAnswered}</span>\n          </div>\n      </div>\n            {!isGameOver && TriviaQuestion ? (\n                <>\n                    <p>{question}</p>\n                    <div className='optionbox'>\n                        {[correct_answer, ...incorrect_answers].sort().map((answer, index) => (\n                            <button key={index} onClick={() => handleAnswerClick(answer)}  className='options'>\n                                {answer}\n                            </button>\n                        ))}\n                    </div>\n                    {userAnswer && (\n                        <p className={correct ? \"correct-answer\" : \"wrong-answer\"}>\n                            {correct ? \"Correct Answer!\" : `Wrong Answer! Correct was: ${correct_answer}`}\n                        </p>\n                    )}\n                    <button onClick={handleNextQuestion} className=\"nextButton\">Next Question</button>\n                </>\n            ) : (\n                <p>No more questions or game is over.</p>\n            )}\n        </div>\n    );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}