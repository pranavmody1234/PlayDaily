{"ast":null,"code":"var _jsxFileName = \"/Users/pranavmody/playdaily-app1/src/TriviaGame/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport triviaData from './trivia-data';\nimport './trivia_game.css';\nimport Celebration from './celebration'; // Ensure you have this component ready\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [gameState, setGameState] = useState({\n    score: 0,\n    triviaIndex: 0,\n    isGameOver: false,\n    userAnswer: null,\n    correct: null,\n    questionsAnswered: 0,\n    answered: false\n  });\n  const {\n    score,\n    triviaIndex,\n    isGameOver,\n    userAnswer,\n    correct,\n    questionsAnswered,\n    answered\n  } = gameState;\n  const TriviaQuestion = triviaData[triviaIndex] || {};\n  const {\n    correct_answer,\n    incorrect_answers,\n    question\n  } = TriviaQuestion;\n  const handleAnswerClick = answer => {\n    if (!answered) {\n      const isCorrect = answer === correct_answer;\n      setGameState({\n        ...gameState,\n        userAnswer: answer,\n        correct: isCorrect,\n        score: isCorrect ? score + 1 : score,\n        questionsAnswered: questionsAnswered + 1,\n        answered: true\n      });\n    }\n  };\n  const wonOrLoss = () => {\n    if (score >= 7) {\n      // Assuming score is the count of correctly answered questions\n      return 'ðŸ˜ƒ'; // Happy emoji for scores of 70 or more\n    } else {\n      return 'ðŸ˜¢'; // Sad emoji for scores less than 70\n    }\n  };\n  const handleNextQuestion = () => {\n    if (triviaIndex < triviaData.length - 1) {\n      setGameState({\n        ...gameState,\n        triviaIndex: triviaIndex + 1,\n        userAnswer: null,\n        correct: null,\n        answered: false\n      });\n    } else {\n      setGameState({\n        ...gameState,\n        isGameOver: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Rightly Answered: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coins-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Out of: \", questionsAnswered]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), !isGameOver && TriviaQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"optionbox\",\n        children: [correct_answer, ...incorrect_answers].sort().map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerClick(answer),\n          className: \"options\",\n          disabled: answered // Disable buttons once answered\n          ,\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), userAnswer && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: correct ? \"correct-answer\" : \"wrong-answer\",\n        children: correct ? \"Correct Answer!\" : `Wrong Answer! Correct was: ${correct_answer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        className: \"nextButton\",\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game over\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this), \" Your Score: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 51\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"finalScore\",\n          children: [score * 10, \"/\", questionsAnswered * 10, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 128\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 134\n        }, this), \" \", wonOrLoss(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), score >= 7 && /*#__PURE__*/_jsxDEV(Celebration, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"ZLOrzvEN/CPBHoMdGopoP/WvS5U=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","triviaData","Celebration","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","gameState","setGameState","score","triviaIndex","isGameOver","userAnswer","correct","questionsAnswered","answered","TriviaQuestion","correct_answer","incorrect_answers","question","handleAnswerClick","answer","isCorrect","wonOrLoss","handleNextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sort","map","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/pranavmody/playdaily-app1/src/TriviaGame/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport triviaData from './trivia-data';\nimport './trivia_game.css';\nimport Celebration from './celebration'; // Ensure you have this component ready\n\nfunction Game() {\n    const [gameState, setGameState] = useState({\n        score: 0,\n        triviaIndex: 0,\n        isGameOver: false,\n        userAnswer: null,\n        correct: null,\n        questionsAnswered: 0,\n        answered: false,\n    });\n\n    const { score, triviaIndex, isGameOver, userAnswer, correct, questionsAnswered, answered } = gameState;\n\n    const TriviaQuestion = triviaData[triviaIndex] || {};\n    const { correct_answer, incorrect_answers, question } = TriviaQuestion;\n\n    const handleAnswerClick = (answer) => {\n        if (!answered) {\n            const isCorrect = answer === correct_answer;\n            setGameState({\n                ...gameState,\n                userAnswer: answer,\n                correct: isCorrect,\n                score: isCorrect ? score + 1 : score,\n                questionsAnswered: questionsAnswered + 1,\n                answered: true,\n            });\n        }\n    };\n    const wonOrLoss = () => {\n        if (score >= 7) { // Assuming score is the count of correctly answered questions\n            return 'ðŸ˜ƒ'; // Happy emoji for scores of 70 or more\n        } else {\n            return 'ðŸ˜¢'; // Sad emoji for scores less than 70\n        }\n    };\n    \n    const handleNextQuestion = () => {\n        if (triviaIndex < triviaData.length - 1) {\n            setGameState({\n                ...gameState,\n                triviaIndex: triviaIndex + 1,\n                userAnswer: null,\n                correct: null,\n                answered: false,\n            });\n        } else {\n            setGameState({\n                ...gameState,\n                isGameOver: true,\n            });\n        }\n    };\n\n    return (\n        <div className=\"Game\">\n            <div className=\"header-container\">\n                <h1>Rightly Answered: {score}</h1>\n                <div className=\"coins-container\">\n                    <h1>Out of: {questionsAnswered}</h1>\n                </div>\n            </div>\n            {!isGameOver && TriviaQuestion ? (\n                <>\n                    <p>{question}</p>\n                    <div className='optionbox'>\n                        {[correct_answer, ...incorrect_answers].sort().map((answer, index) => (\n                            <button\n                                key={index}\n                                onClick={() => handleAnswerClick(answer)}\n                                className='options'\n                                disabled={answered}  // Disable buttons once answered\n                            >\n                                {answer}\n                            </button>\n                        ))}\n                    </div>\n                    {userAnswer && (\n                        <p className={correct ? \"correct-answer\" : \"wrong-answer\"}>\n                            {correct ? \"Correct Answer!\" : `Wrong Answer! Correct was: ${correct_answer}`}\n                        </p>\n                    )}\n                    <button onClick={handleNextQuestion} className=\"nextButton\">Next Question</button>\n                </>\n            ) : (\n                <>\n                    <p>Game over<br/> Your Score: <br /> <span className='finalScore'>{score*10}/{questionsAnswered*10} </span><br /><br /> {wonOrLoss()} </p>\n                    {score >= 7 && <Celebration />}\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}