{"ast":null,"code":"var _jsxFileName = \"/Users/pranavmody/playdaily-app1/src/TriviaGame/Game.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport triviaData from './trivia-data';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  // Initialize state within the component using useState\n  const [gameState, setGameState] = useState({\n    score: 0,\n    triviaIndex: 2,\n    isGameOver: false\n  });\n\n  // Destructure the required values from gameState\n  const {\n    score,\n    triviaIndex,\n    isGameOver\n  } = gameState;\n\n  // Handle the case where triviaData might be empty or index is out of range\n  const TriviaQuestion = triviaData[triviaIndex] || {};\n  const {\n    correct_answer,\n    incorrect_answers,\n    question\n  } = TriviaQuestion;\n\n  // Example render of the game interface\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: TriviaQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: correct_answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this), incorrect_answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No trivia question available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"r1Aj85o1gFcOV7mUkhALfrraMeA=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","triviaData","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","gameState","setGameState","score","triviaIndex","isGameOver","TriviaQuestion","correct_answer","incorrect_answers","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","answer","index","_c","$RefreshReg$"],"sources":["/Users/pranavmody/playdaily-app1/src/TriviaGame/Game.js"],"sourcesContent":["import { useState } from 'react';\nimport triviaData from './trivia-data';\n\nfunction Game() {\n    // Initialize state within the component using useState\n    const [gameState, setGameState] = useState({\n        score: 0,\n        triviaIndex: 2,\n        isGameOver: false,\n    });\n\n    // Destructure the required values from gameState\n    const { score, triviaIndex, isGameOver } = gameState;\n\n    // Handle the case where triviaData might be empty or index is out of range\n    const TriviaQuestion = triviaData[triviaIndex] || {};\n    const { correct_answer, incorrect_answers, question } = TriviaQuestion;\n\n    // Example render of the game interface\n    return (\n        <div className=\"Game\">\n           {TriviaQuestion ? (\n               <>\n                   <p>{question}</p>\n                   <p>{correct_answer}</p>\n                   {incorrect_answers.map((answer, index) => (\n                       <p key={index}>{answer}</p>\n                   ))}\n               </>\n           ) : (\n               <p>No trivia question available</p>\n           )}\n        </div>\n    );\n}\n\nexport default Game;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IACvCU,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE;EAChB,CAAC,CAAC;;EAEF;EACA,MAAM;IAAEF,KAAK;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGJ,SAAS;;EAEpD;EACA,MAAMK,cAAc,GAAGZ,UAAU,CAACU,WAAW,CAAC,IAAI,CAAC,CAAC;EACpD,MAAM;IAAEG,cAAc;IAAEC,iBAAiB;IAAEC;EAAS,CAAC,GAAGH,cAAc;;EAEtE;EACA,oBACIV,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,EACjBL,cAAc,gBACXV,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACIf,OAAA;QAAAe,QAAA,EAAIF;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBnB,OAAA;QAAAe,QAAA,EAAIJ;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtBP,iBAAiB,CAACQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACjCtB,OAAA;QAAAe,QAAA,EAAgBM;MAAM,GAAdC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC7B,CAAC;IAAA,eACJ,CAAC,gBAEHnB,OAAA;MAAAe,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACrC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACf,EAAA,CA/BQD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAiCb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}