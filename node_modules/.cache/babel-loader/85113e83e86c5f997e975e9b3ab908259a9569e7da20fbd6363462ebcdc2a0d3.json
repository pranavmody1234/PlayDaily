{"ast":null,"code":"import React,{useState}from'react';import triviaData from'./trivia-data';import'./trivia_game.css';import Celebration from'./celebration';// Ensure you have this component ready\nimport{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";function Game(){const[gameState,setGameState]=useState({score:0,triviaIndex:0,isGameOver:false,userAnswer:null,correct:null,questionsAnswered:0,answered:false});const{score,triviaIndex,isGameOver,userAnswer,correct,questionsAnswered,answered}=gameState;const TriviaQuestion=triviaData[triviaIndex]||{};const{correct_answer,incorrect_answers,question}=TriviaQuestion;const handleAnswerClick=answer=>{if(!answered){const isCorrect=answer===correct_answer;setGameState({...gameState,userAnswer:answer,correct:isCorrect,score:isCorrect?score+1:score,questionsAnswered:questionsAnswered+1,answered:true});}};const wonOrLoss=()=>{if(score>=7){// Assuming score is the count of correctly answered questions\nreturn'ðŸ˜ƒ';// Happy emoji for scores of 70 or more\n}else{return'ðŸ˜¢';// Sad emoji for scores less than 70\n}};const handleNextQuestion=()=>{if(triviaIndex<triviaData.length-1){setGameState({...gameState,triviaIndex:triviaIndex+1,userAnswer:null,correct:null,answered:false});}else{setGameState({...gameState,isGameOver:true});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"Game\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-container\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Rightly Answered: \",score]}),/*#__PURE__*/_jsx(\"div\",{className:\"coins-container\",children:/*#__PURE__*/_jsxs(\"h1\",{children:[\"Out of: \",questionsAnswered]})})]}),!isGameOver&&TriviaQuestion?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:question}),/*#__PURE__*/_jsx(\"div\",{className:\"optionbox\",children:[correct_answer,...incorrect_answers].sort().map((answer,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAnswerClick(answer),className:\"options\",disabled:answered// Disable buttons once answered\n,children:answer},index))}),userAnswer&&/*#__PURE__*/_jsx(\"p\",{className:correct?\"correct-answer\":\"wrong-answer\",children:correct?\"Correct Answer!\":\"Wrong Answer! Correct was: \".concat(correct_answer)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextQuestion,className:\"nextButton\",children:\"Next Question\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Game over\",/*#__PURE__*/_jsx(\"br\",{}),\" Your Score: \",/*#__PURE__*/_jsx(\"br\",{}),\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"finalScore\",children:[score*10,\"/\",questionsAnswered*10,\" \"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\" \",wonOrLoss(),\" \"]}),score>=7&&/*#__PURE__*/_jsx(Celebration,{})]})]});}export default Game;","map":{"version":3,"names":["React","useState","triviaData","Celebration","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Game","gameState","setGameState","score","triviaIndex","isGameOver","userAnswer","correct","questionsAnswered","answered","TriviaQuestion","correct_answer","incorrect_answers","question","handleAnswerClick","answer","isCorrect","wonOrLoss","handleNextQuestion","length","className","children","sort","map","index","onClick","disabled","concat"],"sources":["/Users/pranavmody/Documents/GitHub/PlayDaily/src/TriviaGame/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport triviaData from './trivia-data';\nimport './trivia_game.css';\nimport Celebration from './celebration'; // Ensure you have this component ready\n\nfunction Game() {\n    const [gameState, setGameState] = useState({\n        score: 0,\n        triviaIndex: 0,\n        isGameOver: false,\n        userAnswer: null,\n        correct: null,\n        questionsAnswered: 0,\n        answered: false,\n    });\n\n    const { score, triviaIndex, isGameOver, userAnswer, correct, questionsAnswered, answered } = gameState;\n\n    const TriviaQuestion = triviaData[triviaIndex] || {};\n    const { correct_answer, incorrect_answers, question } = TriviaQuestion;\n\n    const handleAnswerClick = (answer) => {\n        if (!answered) {\n            const isCorrect = answer === correct_answer;\n            setGameState({\n                ...gameState,\n                userAnswer: answer,\n                correct: isCorrect,\n                score: isCorrect ? score + 1 : score,\n                questionsAnswered: questionsAnswered + 1,\n                answered: true,\n            });\n        }\n    };\n    const wonOrLoss = () => {\n        if (score >= 7) { // Assuming score is the count of correctly answered questions\n            return 'ðŸ˜ƒ'; // Happy emoji for scores of 70 or more\n        } else {\n            return 'ðŸ˜¢'; // Sad emoji for scores less than 70\n        }\n    };\n    \n    const handleNextQuestion = () => {\n        if (triviaIndex < triviaData.length - 1) {\n            setGameState({\n                ...gameState,\n                triviaIndex: triviaIndex + 1,\n                userAnswer: null,\n                correct: null,\n                answered: false,\n            });\n        } else {\n            setGameState({\n                ...gameState,\n                isGameOver: true,\n            });\n        }\n    };\n\n    return (\n        <div className=\"Game\">\n            <div className=\"header-container\">\n                <h1>Rightly Answered: {score}</h1>\n                <div className=\"coins-container\">\n                    <h1>Out of: {questionsAnswered}</h1>\n                </div>\n            </div>\n            {!isGameOver && TriviaQuestion ? (\n                <>\n                    <p>{question}</p>\n                    <div className='optionbox'>\n                        {[correct_answer, ...incorrect_answers].sort().map((answer, index) => (\n                            <button\n                                key={index}\n                                onClick={() => handleAnswerClick(answer)}\n                                className='options'\n                                disabled={answered}  // Disable buttons once answered\n                            >\n                                {answer}\n                            </button>\n                        ))}\n                    </div>\n                    {userAnswer && (\n                        <p className={correct ? \"correct-answer\" : \"wrong-answer\"}>\n                            {correct ? \"Correct Answer!\" : `Wrong Answer! Correct was: ${correct_answer}`}\n                        </p>\n                    )}\n                    <button onClick={handleNextQuestion} className=\"nextButton\">Next Question</button>\n                </>\n            ) : (\n                <>\n                    <p>Game over<br/> Your Score: <br /> <span className='finalScore'>{score*10}/{questionsAnswered*10} </span><br /><br /> {wonOrLoss()} </p>\n                    {score >= 7 && <Celebration />}\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}